import './profile-information.css'
import { useState } from 'react'
import axios from 'axios'

const ProfileInformation = ({ profileDescription = "No information available", onUpdate, services = [] }) => {
  const [showModal, setShowModal] = useState(false);
  const [editedAboutMe, setEditedAboutMe] = useState(profileDescription);
  const [loading, setLoading] = useState(false);

  const [showPreferencesModal, setShowPreferencesModal] = useState(false);
  const [preferredServices, setPreferredServices] = useState(services);

  const userDetails = JSON.parse(localStorage.getItem("userDetails"));

  const handleSave = async () => {
    try {
      setLoading(true);
      await axios.put(`https://carepro-api20241118153443.azurewebsites.net/api/Clients/UpdateClientInfo/${userDetails.id}`, {
        aboutMe: editedAboutMe,
      });
      setShowModal(false);
      if (onUpdate) onUpdate(editedAboutMe);
    } catch (err) {
      console.error('Failed to update About Me:', err);
    } finally {
      setLoading(false);
    }
  };

  const handleSavePreferences = async () => {
    try {
      setLoading(true);
      await axios.put(`https://carepro-api20241118153443.azurewebsites.net/api/Clients/UpdateClientPreferences/${userDetails.id}`, {
        preferredServices: preferredServices
      });
      setShowPreferencesModal(false);
    } catch (err) {
      console.error('Failed to update preferences:', err);
    } finally {
      setLoading(false);
    }
  };

  // Available service categories
  const availableServices = [
    "Rehabilitation services", "Dental care", "Cooking",
    "Acupuncture", "Nursing care", "Emergency response", "Home care",
    "Medication management", "Physical therapy", "Companionship"
  ];

  const toggleService = (service) => {
    if (preferredServices.includes(service)) {
      setPreferredServices(preferredServices.filter(s => s !== service));
    } else {
      setPreferredServices([...preferredServices, service]);
    }
  };

  return (
    <div>
      <div className="description">
        <h3>About Me</h3>
        <p>{profileDescription}</p>
        <button onClick={() => setShowModal(true)}>Edit</button>
      </div>

      <hr />

      <div className="services">
        <h3>Preferred Services</h3>
        <ul>
          {services && services.length > 0 ? (
            services.map((service, i) => <li key={i}>{service}</li>)
          ) : (
            <li>No services listed</li>
          )}
        </ul>
        <button onClick={() => setShowPreferencesModal(true)}>Update Preferences</button>
      </div>

      {/* Edit About Me Modal */}
      {showModal && (
        <div className="modal-overlay">
          <div className="modal-content">
            <h3>Edit About Me</h3>
            <textarea
              value={editedAboutMe}
              onChange={(e) => setEditedAboutMe(e.target.value)}
              rows={6}
              style={{ width: '100%' }}
            />
            <div className="modal-actions">
              <button onClick={() => setShowModal(false)}>Cancel</button>
              <button onClick={handleSave} disabled={loading}>
                {loading ? 'Saving...' : 'Save'}
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Service Preferences Modal */}
      {showPreferencesModal && (
        <div className="modal-overlay">
          <div className="modal-content">
            <h3>Update Service Preferences</h3>
            <p>Select services you're interested in:</p>
            <div className="services-checkboxes">
              {availableServices.map((service, index) => (
                <div key={index} className="service-checkbox">
                  <input
                    type="checkbox"
                    id={`service-${index}`}
                    checked={preferredServices.includes(service)}
                    onChange={() => toggleService(service)}
                  />
                  <label htmlFor={`service-${index}`}>{service}</label>
                </div>
              ))}
            </div>
            <div className="modal-actions">
              <button onClick={() => setShowPreferencesModal(false)}>Cancel</button>
              <button onClick={handleSavePreferences} disabled={loading}>
                {loading ? 'Saving...' : 'Save Preferences'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ProfileInformation;
